package zxs.test.algorithm;


import zxs.test.model.ListNode;

public class ReverseLinked {

    public static void main(String[] args) {
//        ListNode listNode = ListNode.addNodes(new int[]{1, 2, 3, 4});
//        ListNode listNode2 = reverseList(listNode);
//
//        StringBuilder builder=new StringBuilder();
//        builder.append("come on man").append("\n\r");
//        builder.append("do not lose your faith").append("\n\r");
//        System.out.println(builder.toString());

        byte[] bytes=new byte[]{47,117,115,101,114,47,97,100,100};
        String str=new String(bytes);
        System.out.println(str);
        for (int i=0;i<=127;i++){
            char ch= (char) i;
            if (i % 20 ==0){
                System.out.println(ch);
            }else {
                System.out.print(ch+",");
            }
        }

        String data=new String ("0 = 71\n" +
                "1 = 69\n" +
                "2 = 84\n" +
                "3 = 32\n" +
                "4 = 47\n" +
                "5 = 117\n" +
                "6 = 115\n" +
                "7 = 101\n" +
                "8 = 114\n" +
                "9 = 47\n" +
                "10 = 97\n" +
                "11 = 100\n" +
                "12 = 100\n" +
                "13 = 63\n" +
                "14 = 110\n" +
                "15 = 97\n" +
                "16 = 109\n" +
                "17 = 101\n" +
                "18 = 61\n" +
                "19 = 49\n" +
                "20 = 32\n" +
                "21 = 72\n" +
                "22 = 84\n" +
                "23 = 84\n" +
                "24 = 80\n" +
                "25 = 47\n" +
                "26 = 49\n" +
                "27 = 46\n" +
                "28 = 49\n" +
                "29 = 13\n" +
                "30 = 10\n" +
                "31 = 99\n" +
                "32 = 111\n" +
                "33 = 110\n" +
                "34 = 116\n" +
                "35 = 101\n" +
                "36 = 110\n" +
                "37 = 116\n" +
                "38 = 45\n" +
                "39 = 116\n" +
                "40 = 121\n" +
                "41 = 112\n" +
                "42 = 101\n" +
                "43 = 58\n" +
                "44 = 97\n" +
                "45 = 112\n" +
                "46 = 112\n" +
                "47 = 108\n" +
                "48 = 105\n" +
                "49 = 99\n" +
                "50 = 97\n" +
                "51 = 116\n" +
                "52 = 105\n" +
                "53 = 111\n" +
                "54 = 110\n" +
                "55 = 47\n" +
                "56 = 106\n" +
                "57 = 115\n" +
                "58 = 111\n" +
                "59 = 110\n" +
                "60 = 110\n" +
                "61 = 13\n" +
                "62 = 10\n" +
                "63 = 97\n" +
                "64 = 99\n" +
                "65 = 99\n" +
                "66 = 101\n" +
                "67 = 112\n" +
                "68 = 116\n" +
                "69 = 58\n" +
                "70 = 42\n" +
                "71 = 47\n" +
                "72 = 42\n" +
                "73 = 42\n" +
                "74 = 13\n" +
                "75 = 10\n" +
                "76 = 99\n" +
                "77 = 111\n" +
                "78 = 110\n" +
                "79 = 116\n" +
                "80 = 101\n" +
                "81 = 110\n" +
                "82 = 116\n" +
                "83 = 45\n" +
                "84 = 108\n" +
                "85 = 101\n" +
                "86 = 110\n" +
                "87 = 103\n" +
                "88 = 116\n" +
                "89 = 104\n" +
                "90 = 58\n" +
                "91 = 50\n" +
                "92 = 48\n" +
                "93 = 48\n" +
                "94 = 13\n" +
                "95 = 10\n" +
                "96 = 104\n" +
                "97 = 111\n" +
                "98 = 115\n" +
                "99 = 116\n" +
                "100 = 58\n" +
                "101 = 108\n" +
                "102 = 111\n" +
                "103 = 99\n" +
                "104 = 97\n" +
                "105 = 108\n" +
                "106 = 104\n" +
                "107 = 111\n" +
                "108 = 115\n" +
                "109 = 116\n" +
                "110 = 58\n" +
                "111 = 56\n" +
                "112 = 55\n" +
                "113 = 54\n" +
                "114 = 53\n" +
                "115 = 53\n" +
                "116 = 13\n" +
                "117 = 10\n" +
                "118 = 99\n" +
                "119 = 111\n" +
                "120 = 110\n" +
                "121 = 110\n" +
                "122 = 101\n" +
                "123 = 99\n" +
                "124 = 116\n" +
                "125 = 105\n" +
                "126 = 111\n" +
                "127 = 110\n" +
                "128 = 58\n" +
                "129 = 75\n" +
                "130 = 101\n" +
                "131 = 101\n" +
                "132 = 112\n" +
                "133 = 45\n" +
                "134 = 65\n" +
                "135 = 108\n" +
                "136 = 105\n" +
                "137 = 118\n" +
                "138 = 101\n" +
                "139 = 101\n" +
                "140 = 13\n" +
                "141 = 10\n" +
                "142 = 117\n" +
                "143 = 115\n" +
                "144 = 101\n" +
                "145 = 114\n" +
                "146 = 45\n" +
                "147 = 97\n" +
                "148 = 103\n" +
                "149 = 101\n" +
                "150 = 110\n" +
                "151 = 116\n" +
                "152 = 58\n" +
                "153 = 65\n" +
                "154 = 112\n" +
                "155 = 97\n" +
                "156 = 99\n" +
                "157 = 104\n" +
                "158 = 101\n" +
                "159 = 45\n" +
                "160 = 72\n" +
                "161 = 116\n" +
                "162 = 116\n" +
                "163 = 112\n" +
                "164 = 67\n" +
                "165 = 108\n" +
                "166 = 105\n" +
                "167 = 101\n" +
                "168 = 110\n" +
                "169 = 116\n" +
                "170 = 47\n" +
                "171 = 52\n" +
                "172 = 46\n" +
                "173 = 53\n" +
                "174 = 46\n" +
                "175 = 54\n" +
                "176 = 32\n" +
                "177 = 40\n" +
                "178 = 74\n" +
                "179 = 97\n" +
                "180 = 118\n" +
                "181 = 97\n" +
                "182 = 47\n" +
                "183 = 49\n" +
                "184 = 46\n" +
                "185 = 56\n" +
                "186 = 46\n" +
                "187 = 48\n" +
                "188 = 95\n" +
                "189 = 57\n" +
                "190 = 49\n" +
                "191 = 41\n" +
                "192 = 41\n" +
                "193 = 13\n" +
                "194 = 10\n" +
                "195 = 13\n" +
                "196 = 10\n" +
                "197 = 123\n" +
                "198 = 34\n" +
                "199 = 97\n" +
                "200 = 103\n" +
                "201 = 101\n" +
                "202 = 34\n" +
                "203 = 58\n" +
                "204 = 49\n" +
                "205 = 44\n" +
                "206 = 34\n" +
                "207 = 110\n" +
                "208 = 97\n" +
                "209 = 109\n" +
                "210 = 101\n" +
                "211 = 34\n" +
                "212 = 58\n" +
                "213 = 34\n" +
                "214 = 49\n" +
                "215 = 34\n" +
                "216 = 125");
        String[] split = data.split("\n");
        byte[] data_bytes=new byte[217];
        int i=0;
        for (String s : split) {
            String s1 = s.split("=")[1];
            data_bytes[i++]=Byte.parseByte(s1.trim());
        }
        String trans=new String(data_bytes);
        System.out.println(trans);
    }

    /**
     * 基本思想是遍历老链表，取出老链表元素加入新链表头结点,并且设置next指针的值为null
     * 每次遍历都将新元素的next指针指向其前面的元素
     * 并再次赋值给新链表
     * @param listNode
     * @return
     */
    private static ListNode reverseList(ListNode listNode) {
        ListNode node=null;
        while (listNode != null){
            listNode.next=null;
            listNode.next=node;
            node=listNode;
            listNode=listNode.next;
        }
        return node;
    }
}
